security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        Auth\Domain\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        auth_user_provider:
            entity:
                class: Auth\Domain\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api_login_jwt:
            pattern: ^/api/auth/login/jwt
            provider: auth_user_provider
            stateless: true
            json_login:
                check_path: auth_api_login_jwt
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api_login_json:
            pattern: ^/api/auth/login/json
            provider: auth_user_provider
            stateless: true
            json_login:
                check_path: auth_api_login_json

        web_auth:
            pattern: ^/web/auth
            provider: auth_user_provider
            stateless: true
            logout:
                path: auth_web_logout
            form_login:
                enable_csrf: true
                login_path: auth_web_login
                check_path: auth_web_login

        web:
            provider: auth_user_provider
            stateless: true
            pattern: ^/web
            jwt: ~

        api:
            provider: auth_user_provider
            stateless: true
            pattern: ^/api
            jwt: ~

#        main:
#            lazy: true
#            provider: auth_user_provider
#            logout:
#                path: auth_web_logout
#            form_login:
#                enable_csrf: true
#                # "login" is the name of the route created previously
#                login_path: auth_web_login
#                check_path: auth_web_login
#            json_login:
#                # api_login is a route we will create below
#                check_path: auth_api_login_json
##                login_path: auth_api_login_json

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
#        - { path: ^/api/auth/login/jwt, roles: PUBLIC_ACCESS }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/web, roles: IS_AUTHENTICATED_FULLY }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
